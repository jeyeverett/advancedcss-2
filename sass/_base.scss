// COLOR VARIABLES
$color-primary: #c69963;
$color-primary-dark: #B28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483A;
$color-grey-dark-2: #6D5D4B;

// FONT VARIABLES
$font-primary: 'Nunito', sans-serif;
$font-display: 'Josefin Sans', sans-serif;

// RESPONSIVE BREAKPOINTS
$bp-largest: 75em; // 1200px
$bp-large: 62.5em; // 1000px
$bp-medium: 50em; // 800px
$bp-small: 37.5em; // 800px


*, 
*::before, 
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; // 10px/16px = 62.5% -> 1rem = 10px

    @media only screen and (max-width: $bp-largest) {
        font-size: 50%;
    }

    @media only screen and (max-width: $bp-medium) {
        font-size: 50%;
    }
}

body {
    font-family: $font-primary;
    color: $color-grey-dark-2; //Grey with a hint of gold compliments the gold primary color
    font-weight: 300; //A bit of font weight contributes to the luxury feel
    line-height: 1.6;
}

.container {
    display: grid;
    //80vh means the first row will always be 80% of viewport height
    //min-content means second the row will size itself to fit its contents
    //40vw means the third row will always be 40% of viewport width, this helps it respond to screen width
    grid-template-rows: 85vh min-content 40vw repeat(3, min-content); 
    //We use the minmax() function below to say the max width of a column is 14rem and the min is its content
    grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end]; //14rem comes from 1140px / 8 = 142.5px ~ 140px, also note the 1fr on either size is to center the main content

    @media only screen and (max-width: $bp-large) {
        grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content); 
        grid-template-columns:[full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];
    }

    @media only screen and (max-width: $bp-medium) {
        grid-template-rows: 6rem calc(100vh - 6rem); 
    }
}



/* 
grid-template-columns: 
[sidebar-start] this is the firstline of the grid i.e. the far left of the page
8rem we want the sidebar to be 8rem
[sidebar-end full-start] we label the end of the sidebar / the start of the main area
minmax(6rem, 1fr) we put this on either side of the main content to center it, we use minmax to ensure some margin
[center-start] this labels the start of the center content (centered with within the full)
repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) this is the center content, we want 8 columns at 14 rem each which adds up to ~1140px, the columns are labeled automatically as shown, but I don't use the labels here because I like the other method I used
[center-end] end of center section
minmax(6rem, 1fr) same buffer as before center-start
[full-end]; 
*/